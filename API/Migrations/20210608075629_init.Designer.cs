// <auto-generated />
using System;
using BuildingMaterialShop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BuildingMaterialShop.Migrations
{
    [DbContext(typeof(BuildingMaterialsShopContext))]
    [Migration("20210608075629_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BuildingMaterialShop.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Check", b =>
                {
                    b.Property<int>("CheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CheckId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Checks");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.CheckDetail", b =>
                {
                    b.Property<int>("CheckId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ActualQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("CheckId", "ProductId")
                        .HasName("PK__CheckDet__4DC19B0A97E21D68");

                    b.HasIndex("ProductId");

                    b.ToTable("CheckDetails");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit")
                        .HasColumnName("isBlocked");

                    b.Property<string>("PassWord")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit")
                        .HasColumnName("isBlocked");

                    b.Property<string>("PassWord")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Import", b =>
                {
                    b.Property<int>("ImportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ImportId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Imports");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.ImportDetail", b =>
                {
                    b.Property<int>("ImportId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ImportId", "ProductId")
                        .HasName("PK__ImportDe__4DD7AB860B18EF52");

                    b.HasIndex("ProductId");

                    b.ToTable("ImportDetails");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("money");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId")
                        .HasName("PK__OrderDet__08D097A3DC84C355");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.OrderStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("StatusId", "OrderId")
                        .HasName("PK__OrderSta__24D725DF2F6B3947");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderStatus");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Unit")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.RefreshTokenCustomer", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tokenId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("expiryDate");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("token");

                    b.HasKey("TokenId");

                    b.HasIndex("CustomerId");

                    b.ToTable("RefreshTokenCustomer");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.RefreshTokenEmployee", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tokenId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employeeId");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("expiryDate");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("token");

                    b.HasKey("TokenId")
                        .HasName("PK__RefreshT__AC16DB47559C5F0A");

                    b.HasIndex("EmployeeId");

                    b.ToTable("RefreshTokenEmployee");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Supplier", b =>
                {
                    b.Property<string>("SupplierId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Supply", b =>
                {
                    b.Property<string>("ProductId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SupplierId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ProductId", "SupplierId")
                        .HasName("PK__Supplies__E0B2A0A6C5BA613D");

                    b.HasIndex("SupplierId");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.WareHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("WareHouse");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Check", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Employee", "Employee")
                        .WithMany("Checks")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_ChecksEmployee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.CheckDetail", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Check", "Check")
                        .WithMany("CheckDetails")
                        .HasForeignKey("CheckId")
                        .HasConstraintName("FK_CheckDetailsCheck")
                        .IsRequired();

                    b.HasOne("BuildingMaterialShop.Models.Product", "Product")
                        .WithMany("CheckDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_CheckDetailsProduct")
                        .IsRequired();

                    b.Navigation("Check");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Employee", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_EmployeesRole");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Import", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Employee", "Employee")
                        .WithMany("Imports")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_ImportsEmployee");

                    b.HasOne("BuildingMaterialShop.Models.Supplier", "Supplier")
                        .WithMany("Imports")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_ImportsSupplier");

                    b.Navigation("Employee");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.ImportDetail", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Import", "Import")
                        .WithMany("ImportDetails")
                        .HasForeignKey("ImportId")
                        .HasConstraintName("FK_ImportDetailsImport")
                        .IsRequired();

                    b.HasOne("BuildingMaterialShop.Models.Product", "Product")
                        .WithMany("ImportDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ImportDetailsProduct")
                        .IsRequired();

                    b.Navigation("Import");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Order", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_OrdersCustomer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.OrderDetail", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderDetailsOrder")
                        .IsRequired();

                    b.HasOne("BuildingMaterialShop.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_OrderDetailsProduct")
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.OrderStatus", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Order", "Order")
                        .WithMany("OrderStatus")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderStatus_OrderId")
                        .IsRequired();

                    b.HasOne("BuildingMaterialShop.Models.Status", "Status")
                        .WithMany("OrderStatus")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_OrderStatus_Status")
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Product", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_ProductsCategory");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.RefreshTokenCustomer", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Customer", "Customer")
                        .WithMany("RefreshTokenCustomers")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__RefreshTo__custo__3F466844")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.RefreshTokenEmployee", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Employee", "Employee")
                        .WithMany("RefreshTokenEmployees")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__RefreshTo__emplo__403A8C7D")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Supply", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Product", "Product")
                        .WithMany("Supplies")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_SuppliesProduct")
                        .IsRequired();

                    b.HasOne("BuildingMaterialShop.Models.Supplier", "Supplier")
                        .WithMany("Supplies")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_SuppliesSupplier")
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.WareHouse", b =>
                {
                    b.HasOne("BuildingMaterialShop.Models.Product", "Product")
                        .WithMany("WareHouses")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_WareHouseProduct");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Check", b =>
                {
                    b.Navigation("CheckDetails");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Customer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("RefreshTokenCustomers");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Employee", b =>
                {
                    b.Navigation("Checks");

                    b.Navigation("Imports");

                    b.Navigation("RefreshTokenEmployees");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Import", b =>
                {
                    b.Navigation("ImportDetails");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Product", b =>
                {
                    b.Navigation("CheckDetails");

                    b.Navigation("ImportDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("Supplies");

                    b.Navigation("WareHouses");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Status", b =>
                {
                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("BuildingMaterialShop.Models.Supplier", b =>
                {
                    b.Navigation("Imports");

                    b.Navigation("Supplies");
                });
#pragma warning restore 612, 618
        }
    }
}
